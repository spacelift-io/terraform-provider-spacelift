name: Production registry

on:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.ref }}-registry-prod

jobs:
  registry:
    name: Publish the provider to the registry
    runs-on: ubuntu-latest
    container: golang:1.17

    steps:
      - name: Check out repository code
        uses: actions/checkout@master

      - name: Install utilities
        run: |
          apt-get update -y
          apt-get install -y awscli gettext-base zip

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900

      - name: Import the PGP key
        env:
          GPG_KEY_BASE64: ${{ secrets.GPG_KEY_BASE64 }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          echo ${GPG_KEY_BASE64} | base64 -d > spacelift.gpg
          gpg --import \
            --passphrase=$GPG_PASSPHRASE \
            --pinentry-mode=loopback \
            spacelift.gpg
          rm spacelift.gpg

      - name: Download dependencies to keep the build clean
        run: go mod download

      - name: Build the package
        env:
          DOMAIN: spacelift.io
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: ./registry/package.sh

      - name: Upload the provider data to S3
        run: >-
          aws s3 sync
          build s3://${{ secrets.AWS_S3_BUCKET }}/v1/providers/spacelift-io/spacelift
          --no-progress
          --delete

      - name: Invalidate cache
        run: >-
          aws cloudfront create-invalidation
          --distribution-id ${{ secrets.DISTRIBUTION }}
          --paths "/v1/providers/spacelift-io/spacelift/*"
