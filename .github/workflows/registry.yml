name: Registry

on: [push]

jobs:
  registry:
    name: Publish the provider to the registry
    runs-on: ubuntu-latest
    container: golang:1.15
      
    steps:
      - name: Check out repository code
        uses: actions/checkout@master

      - name: Install utilities
        run: apt-get update && apt-get install -y gettext-base zip

      - name: Import the PGP key
        env:
          GPG_KEY_BASE64: ${{ secrets.GPG_KEY_BASE64 }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          echo ${GPG_KEY_BASE64} | base64 -d > spacelift.gpg
          gpg --import \
            --passphrase=$GPG_PASSPHRASE \
            --pinentry-mode=loopback \
            spacelift.gpg
          rm spacelift.gpg

      - name: Download dependencies to keep the build clean
        run: go mod download
        
      - name: Build the package
        env:
          DOMAIN: ${{ github.ref == 'refs/heads/future' && 'spacelift.dev' || 'spacelift.io' }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: ./registry/package.sh

      - name: Test provider data sync with S3
        uses: jakejarvis/s3-sync-action@7ed8b112447abb09f1da74f3466e4194fc7a6311
        if: github.ref != 'refs/heads/master' && github.ref != 'refs/heads/future'
        with: { args: "--dryrun --delete" }
        env:
          SOURCE_DIR: build
          DEST_DIR: v1/providers/spacelift-io/spacelift
          # Note how test sync only works with preprod.
          AWS_ACCESS_KEY_ID: ${{ secrets.PREPROD_AWS_ACCESS_KEY_ID }}
          AWS_REGION: ${{ secrets.PREPROD_AWS_REGION }}
          AWS_S3_BUCKET: ${{ secrets.PREPROD_AWS_S3_BUCKET }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PREPROD_AWS_SECRET_ACCESS_KEY }}
      
      - name: Upload provider data to S3
        uses: jakejarvis/s3-sync-action@7ed8b112447abb09f1da74f3466e4194fc7a6311
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/future'
        with: { args: "--delete" }
        env:
          SOURCE_DIR: build
          DEST_DIR: v1/providers/spacelift-io/spacelift
          AWS_ACCESS_KEY_ID: ${{ github.ref == 'refs/heads/master' && secrets.AWS_ACCESS_KEY_ID || secrets.PREPROD_AWS_ACCESS_KEY_ID }}
          AWS_REGION: ${{ github.ref == 'refs/heads/master' && secrets.AWS_REGION || secrets.PREPROD_AWS_REGION }}
          AWS_S3_BUCKET: ${{ github.ref == 'refs/heads/master' && secrets.AWS_S3_BUCKET || secrets.PREPROD_AWS_S3_BUCKET }}
          AWS_SECRET_ACCESS_KEY: ${{ github.ref == 'refs/heads/master' && secrets.AWS_SECRET_ACCESS_KEY || secrets.PREPROD_AWS_SECRET_ACCESS_KEY }}

      - name: Invalidate CloudFront distribution
        uses: chetan/invalidate-cloudfront-action@2d2d3f464dcae0bea80ceff79e89960bbac6a754
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/future'
        env:
          AWS_ACCESS_KEY_ID: ${{ github.ref == 'refs/heads/master' && secrets.AWS_ACCESS_KEY_ID || secrets.PREPROD_AWS_ACCESS_KEY_ID }}
          AWS_REGION: ${{ github.ref == 'refs/heads/master' && secrets.AWS_REGION || secrets.PREPROD_AWS_REGION }}
          AWS_SECRET_ACCESS_KEY: ${{ github.ref == 'refs/heads/master' && secrets.AWS_SECRET_ACCESS_KEY || secrets.PREPROD_AWS_SECRET_ACCESS_KEY }}
          DISTRIBUTION: ${{ github.ref == 'refs/heads/master' && secrets.DISTRIBUTION || secrets.PREPROD_DISTRIBUTION }}
          PATHS: "/v1/providers/spacelift-io/spacelift/*"
