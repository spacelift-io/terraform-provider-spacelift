name: github.packages.tf

on: { push }

jobs:
  goreleaser:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Set up Go
        uses: actions/setup-go@v2
        with: { go-version: 1.18 }

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Install spacectl
        uses: spacelift-io/setup-spacectl@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List versions for preprod
        run: |
          spacectl provider list-versions --type=spacelift
        env:
          SPACELIFT_API_KEY_ENDPOINT: https://spacelift-io.app.spacelift.dev
          SPACELIFT_API_KEY_ID: ${{ secrets.SPACELIFT_PREPROD_API_KEY_ID }}
          SPACELIFT_API_KEY_SECRET: ${{ secrets.SPACELIFT_PREPROD_API_KEY_SECRET }}

      - name: List versions for prod
        run: |
          spacectl provider list-versions --type=spacelift
        env:
          SPACELIFT_API_KEY_ENDPOINT: https://spacelift-io.app.spacelift.io
          SPACELIFT_API_KEY_ID: ${{ secrets.SPACELIFT_PROD_API_KEY_ID }}
          SPACELIFT_API_KEY_SECRET: ${{ secrets.SPACELIFT_PROD_API_KEY_SECRET }}

      - name: Set up release notes
        run: |
          echo ${{ steps.import_gpg.outputs.fingerprint }} > key.fingerprint
          gpg --armor --export ${{ steps.import_gpg.outputs.keyid }} > key.asc
        
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          version: latest
          args: release --rm-dist
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release new Spacelift version (preprod)
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GPG_KEY_ID: ${{ steps.import_gpg.outputs.keyid }}
          SPACELIFT_API_KEY_ENDPOINT: https://spacelift-io.app.spacelift.dev
          SPACELIFT_API_KEY_ID: ${{ secrets.SPACELIFT_PREPROD_API_KEY_ID }}
          SPACELIFT_API_KEY_SECRET: ${{ secrets.SPACELIFT_PREPROD_API_KEY_SECRET }}
        run:
          spacectl provider create-version --type=spacelift

      - name: Release new Spacelift version (prod)
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GPG_KEY_ID: ${{ steps.import_gpg.outputs.keyid }}
          SPACELIFT_API_KEY_ENDPOINT: https://spacelift-io.app.spacelift.io
          SPACELIFT_API_KEY_ID: ${{ secrets.SPACELIFT_PROD_API_KEY_ID }}
          SPACELIFT_API_KEY_SECRET: ${{ secrets.SPACELIFT_PROD_API_KEY_SECRET }}
        run:
          spacectl provider create-version --type=spacelift
